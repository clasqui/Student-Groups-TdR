"use strict";angular.module("stugrApp",["ngAnimate","ngCookies","ngMessages","ngResource","ngRoute","ngSanitize","ngTouch","ui.router","ui.bootstrap"]).config(["$urlRouterProvider","$stateProvider","USER_ROLES",function(a,b,c){a.otherwise("/");var d={auth:!0,authorizedRoles:[c.coord,c.professor,c.alumne]};b.state("anon",{"abstract":!0,data:{auth:!1}}).state("anon.login",{url:"/login",views:{"login@":{templateUrl:"views/logIn.html"}},controller:"AppCtrl",data:{}}).state("home",{url:"/",controller:"MainCtrl",templateUrl:"views/main.html",data:d}).state("dashboard",{url:"/admin",templateUrl:"views/admin.html",controller:"AdminCtrl",data:{auth:!0,authorizedRoles:[c.coord]}}).state("courses",{url:"/cursos",templateUrl:"views/group.html",data:d,controller:"GroupCtrl"}).state("courseDetail",{url:"/cursos/:id",templateUrl:"views/groupdetail.html",data:d,controller:"GroupdetailCtrl"}).state("profile",{url:"/perfil",template:"<h1>El teu perfil</h1>",data:d}).state("otherProfile",{url:"/perfil/:id",template:"<h1>EL perfil d'algú altre</h1>",data:{auth:!0,authorizedRoles:[c.coord,c.professor]}})}]).run(["$rootScope","Session","USER_ROLES","AUTH_EVENTS","Userservice","$state","StugrUser",function(a,b,c,d,e,f,g){console.log("$stateChangeSuccess");var h=Parse.User.current();h?(console.log("We have a session"),console.log(h),b.create(h._sessionToken,h),a.currentUser=h):b.destroy(),a.$on("$stateChangeStart",function(b,c,g,h,i){if(console.log("$stateChangeStart"),console.log(c),c.data.auth){var j=c.data.authorizedRoles;e.isAuthorized(j)||(console.log("Not Authorized"),b.preventDefault(),e.isAuthenticated()?(a.$broadcast(d.notAuthorized),f.go("home")):(console.log("User is not logged in"),a.$broadcast(d.notAuthenticated),f.go("anon.login")))}})}]),angular.module("stugrApp").controller("MainCtrl",["$scope","$rootScope","Userservice","Session","NoteModel","TaskModel","USER_ROLES","GroupModel",function(a,b,c,d,e,f,g,h){a.isAuthorized=c.isAuthorized,a.userRoles=g,a.todayTasks=[],a.recentNotes=[],a.todayClasses=[],a.weekdays=[{index:0,string:"Dilluns"},{index:1,string:"Dimarts"},{index:2,string:"Dimecres"},{index:3,string:"Dijous"},{index:4,string:"Divendres"}],f.getMyTasks().then(function(b){console.log(b),a.todayTasks=b},function(a){console.log("Bruh: ",a)}),e.getMyNotes().then(function(b){console.log(b),a.recentNotes=b},function(a){console.log("Bruh: ",a)}),h.getGroups().then(function(b){var c=new Date,d=c.getDay();if(7==d||0==d)return void(a.todayClasses=[]);d-=1,console.log("CUan es n? ",d);for(var e=b.length-1;e>=0;e--){var f=b[e].horari;if(console.log(f),null!=f)for(var g=f.length-1;g>=0;g--)console.log(f[g]),f[g].weekday.index==d&&(console.log(!0),a.todayClasses.push({group:b[e],hora:f[g]}))}console.log(a.todayClasses)},function(a){})}]),angular.module("stugrApp").controller("AppCtrl",["$rootScope","$scope","$location","Userservice","StugrUser","AUTH_EVENTS","USER_ROLES","$state","Session",function(a,b,c,d,e,f,g,h,i){b.userCredentials={username:"",password:"",email:"",first_name:"",last_name:""},b.registerUserMode=!1,a.codename="Student Groups",b.showRegistrationForm=function(){b.registerUserMode=!0},b.currentUser=a.currentUser,b.userRoles=g,b.isAuthorized=d.isAuthorized,b.isLoggedIn=d.isAuthenticated,console.log(d.isAuthenticated()),b.setCurrentUser=function(c){a.currentUser=c,b.currentUser=c},b.doLogin=function(){console.log("Login Credentials: ",b.userCredentials),d.login(b.userCredentials).then(function(c){console.log("Successful login",c),a.$broadcast(f.loginSuccess),b.setCurrentUser(Parse.User.current()),h.go("home")},function(b){console.log("Failed Login: ",b),a.$broadcast(f.loginFailed)})},b.doRegister=function(){d.register().then(function(a){var c=new Parse.User;for(var d in b.userCredentials)c.set(d,b.userCredentials[d]);c.set("coordinador",a),c.signUp(null,{success:function(a){console.log("User "+a.id+" successfully registered!"),b.userCredentials.type="Coordinador",Parse.Cloud.run("sendEmailWithPassword",b.userCredentials,{success:function(a){console.log("Email sent. response: "+a)},error:function(a){console.log("mail error: "+a)}})},error:function(a,b){console.log("failed registration: ",b)}})},function(a){console.log("Could not save the link object, error: "+a.code)})},b.doLogOut=function(){d.logOut(),document.location.reload(),h.go("anon.login")}}]),angular.module("stugrApp").service("Userservice",["$rootScope","Session","USER_ROLES","$state",function(a,b,c,d){var e={};return e.login=function(a){return Parse.User.logIn(a.username,a.password).then(function(a){return console.log(a),b.create(a.sessionToken,Parse.User.current()),a})},e.isAuthenticated=function(){return!!b.userId},e.isAuthorized=function(a){return angular.isArray(a)||(a=[a]),e.isAuthenticated()&&-1!==a.indexOf(b.userRole)},e.register=function(){var a=Parse.Object.extend("Coordinador"),b=new a;return b.save(null)},e.createUser=function(a,b){var c=["Alumne","Professor","Coordinador"],d=["alumne","professor","coordinador"],e=Parse.Object.extend(c[b]),f=new e,g=new Parse.User;f.save(null,{success:function(c){for(var e in a)g.set(e,a[e]);return g.set(d[b],c),console.log("Executing line: user.set("+d[b]+", "+c+"); "),g.signUp(null)},error:function(a,b){console.log("Could not save the link object: "+b)}})},e.logOut=function(){Parse.User.logOut(),b.destroy(),d.go("anon.login")},e}]).constant("AUTH_EVENTS",{loginSuccess:"auth-login-success",loginFailed:"auth-login-failed",logoutSuccess:"auth-logout-success",sessionTimeout:"auth-session-timeout",notAuthenticated:"auth-not-authenticated",notAuthorized:"auth-not-authorized"}).constant("USER_ROLES",{coord:"coord",professor:"professor",alumne:"alumne"}),angular.module("stugrApp").controller("AdminCtrl",["$scope","$rootScope","Userservice",function(a,b,c){a.statusText="Tots els sistemes funcionen correctament, no hi ha hagut incidències avui.",a.statusShow=!0,a.newUser={username:"",email:"",first_name:"",last_name:"",type:""},a.doCreate=function(){var b=Math.random().toString(36).slice(-8),d=parseInt(a.newUser.type);console.log("The typeID as extracted is: "+d),delete a.newUser.type,a.newUser.password=b,c.createUser(a.newUser,d).then(function(b){var c=["Alumne","Professor","Coordinador"];a.statusText="User "+b.id+"successfully registered",a.statusShow=!0,console.log("User Successfully registered, tell them to check their email."),a.newUser.type=c[d],Parse.Cloud.run("sendEmailWithPassword",a.newUser,{success:function(a){console.log("Email sent. response: "+a)},error:function(a){console.log("mail error: "+a)}})},function(a){console.log("failed registration: ",a)},function(a){console.log("update something: ",a)})}}]),angular.module("stugrApp").factory("StugrUser",["$rootScope","Userservice","USER_ROLES","$q",function(a,b,c,d){var e=Parse.User.extend({role:function(){console.log("Getting role with the extended method");var a;return a=this.get("coordinador")?c.coord:this.get("professor")?c.professor:c.alumne,console.log(a),a}},{});return e.prototype.__defineGetter__("first_name",function(){return this.get("first_name")}),e.prototype.__defineSetter__("first_name",function(a){return this.set("first_name",a)}),e.prototype.__defineGetter__("last_name",function(){return this.get("last_name")}),e.prototype.__defineSetter__("last_name",function(a){return this.set("last_name",a)}),e.prototype.__defineGetter__("full_name",function(){return this.get("first_name")+" "+this.get("last_name")}),e.getListOfStudents=function(a){var b=new Parse.Query(e),c=d.defer();return console.log(a),b.containedIn("objectId",a),b.find({success:function(a){console.log("YAAAY: ",a),c.resolve(a)},error:function(a){c.reject(a)}}),c.promise},e.searchAllStudents=function(a){var b=d.defer(),c=new Parse.Query(e);c.startsWith("first_name",a),c.exists("alumne");var f=new Parse.Query(e);f.startsWith("last_name",a),f.exists("alumne");var g=Parse.Query.or(c,f);return g.limit(10),g.find({success:function(a){console.log(a),b.resolve(a)},error:function(a){console.log("Theres been an error searching for users"),b.reject(a)}}),b.promise},e}]),angular.module("stugrApp").service("Session",["USER_ROLES",function(a){this.create=function(a,b){this.id=a,this.userId=b,this.userRole=b.role()},this.destroy=function(){this.id=null,this.userId=null,this.userRole=null}}]),angular.module("stugrApp").directive("authDialog",["AUTH_EVENTS",function(a){return{template:'<div ng-if="visible">There was an authentication error</div>',restrict:"A",link:function(b,c,d){var e=function(a){alert(a),b.visible=!0};b.visible=!1,b.$on(a.notAuthenticated,e(a.notAuthenticated)),b.$on(a.sessionTimeout,e(a.sessionTimeout)),b.$on(a.loginFailed,e(a.loginFailed))}}}]),angular.module("stugrApp").factory("GroupModel",["$rootScope","$q","USER_ROLES",function(a,b,c){var d=Parse.Object.extend("Grup");d.prototype.__defineGetter__("nom",function(){return this.get("nom")}),d.prototype.__defineSetter__("nom",function(a){return this.set("nom",a)}),d.prototype.__defineGetter__("alumnes",function(){return this.get("alumnes")}),d.prototype.__defineSetter__("alumnes",function(a){return this.set("alumnes",a)}),d.prototype.__defineGetter__("Professor",function(){return this.get("Professor")}),d.prototype.__defineSetter__("Professor",function(a){return this.set("Professor",a)}),d.prototype.__defineGetter__("horari",function(){return this.get("horari")}),d.prototype.__defineSetter__("horari",function(a){return this.set("horari",a)});var e={};return e.createGroup=function(c){var e=new d;e.set("nom",c.nom),e.set("Professor",a.currentUser),e.set("horari",c.horaris);var f=b.defer();return e.save(null,{success:function(a){f.resolve(a)},error:function(a,b){f.reject(a,b)}}),f.promise},e.getGroups=function(){var e=new Parse.Query(d),f=b.defer();return a.currentUser.role()==c.alumne?(e.equalTo("alumnes",a.currentUser.id),e.find({success:function(a){f.resolve(a)},error:function(a){f.reject(a)}}),f.promise):(e.equalTo("Professor",Parse.User.current()),e.find({success:function(a){f.resolve(a)},error:function(a){f.reject(a)}}),f.promise)},e.getGroupWithId=function(a){var c=new Parse.Query(d),e=b.defer();return c.equalTo("objectId",a),c.include("alumnes"),c.include("Professor"),c.first().then(function(a){e.resolve(a)},function(a){e.reject(a)}),e.promise},e}]),angular.module("stugrApp").controller("GroupCtrl",["$rootScope","$scope","GroupModel","Userservice","USER_ROLES","$stateParams",function(a,b,c,d,e,f){b.isAuthorized=d.isAuthorized,b.userRoles=e,c.getGroups().then(function(a){0==a.length?(b.noGroups=!0,b.myGroups=[]):(b.noGroups=!1,b.myGroups=a)},function(a){}),b.newGrupAccordionIsOpen=!1,b.searchData="",b.groupData={nom:"",alumnes:[]},b.weekdays=[{index:0,string:"Dilluns"},{index:1,string:"Dimarts"},{index:2,string:"Dimecres"},{index:3,string:"Dijous"},{index:4,string:"Divendres"}],b.hourPicker={time:"",weekday:b.weekdays[0]};var g=new Date;g.setHours(8),g.setMinutes(0),b.hourPicker.time=g,b.newGroupData={nom:"",horaris:[]},b.addToTimetable=function(){b.newGroupData.horaris.push({time:b.hourPicker.time,weekday:b.hourPicker.weekday})},b.deleteHour=function(a){b.newGroupData.horaris.splice(a,1)},b.createGroup=function(){c.createGroup(b.newGroupData).then(function(a){b.myGroups.push(b.newGroupData),b.newGroupData.nom="",b.newGroupData.horaris=[],b.$apply()},function(a,b){console.log("There's been an error creating group: ",b)})}}]),angular.module("stugrApp").controller("GroupdetailCtrl",["$rootScope","$scope","GroupModel","Userservice","USER_ROLES","$stateParams","$state","NoteModel","TaskModel","StugrUser",function(a,b,c,d,e,f,g,h,i,j){b.isAuthorized=d.isAuthorized,b.userRoles=e,b.groupNotes=[],b.groupTasks=[],b.studentsList=[],f.id?(c.getGroupWithId(f.id).then(function(a){console.log(a),b.groupData=a,j.getListOfStudents(a.alumnes).then(function(a){console.log(a.length),b.studentsList=a},function(a){console.log("there's been an error getting the students: ",a)})},function(a){console.log(a)}),h.getNotesForGroup(f.id).then(function(a){console.log(a),b.groupNotes=a},function(a){console.log("there's been an error getting notes: ",a)}),i.getTasksForGroup(f.id).then(function(a){console.log(a),b.groupTasks=a},function(a){console.log("there's been an error getting tasks: ",a)}),b.newNote={titol:"",missatge:""},b.newTask={nom:"",entrega:new Date},b.postNote=function(){return""==b.newNote.missatge?void console.log("Write Something as the message"):void h.createNote(b.newNote.titol,b.newNote.missatge,f.id).then(function(a){console.log("Good promise, update UI"),b.newNote.titol="",b.newNote.missatge="",b.groupNotes.push(a)}).then(function(a){})},b.popup1={opened:!1},b.openCalendar=function(){b.popup1.opened=!0},b.disabled=function(a,b){return"day"===b&&(0===a.getDay()||6===a.getDay())},b.createTask=function(){return""==b.newTask.nom||""==b.newTask.entrega?void console.log("Write Something"):void i.createTask(b.newTask.nom,b.newTask.entrega,f.id).then(function(a){console.log("Good promise, update UI"),b.newTask.nom="",b.newTask.entrega=new Date,b.groupTasks.push(a)}).then(function(a){})},b.deleteNote=function(a){var c=b.groupNotes[a];c.destroy({success:function(c){console.log("successfully deleted"),b.groupNotes.splice(a,1),b.$apply()},error:function(a,b){console.log("There's been an error deleting the note: ",b)}})},b.deleteTask=function(a){var c=b.groupTasks[a];c.destroy({success:function(c){console.log("successfully deleted"),b.groupTasks.splice(a,1),b.$apply()}})},b.deleteStudent=function(a,c){b.groupData.remove("alumnes",a),b.groupData.save(),b.studentsList.splice(c,1)},b.getAllStudents=function(a){return j.searchAllStudents(a).then(function(a){return console.log(a),a},function(a){})},b.addStudent=function(a){b.groupData.addUnique("alumnes",a.id),b.groupData.save(),b.studentsList.push(a)},b.changeName=function(){b.groupData.save()}):(console.log("No ID provided"),g.go("courses"))}]),angular.module("stugrApp").factory("NoteModel",["$rootScope","$q","USER_ROLES","GroupModel",function(a,b,c,d){var e=Parse.Object.extend("Nota");e.prototype.__defineGetter__("autor",function(){return this.get("autor")}),e.prototype.__defineSetter__("autor",function(a){return this.set("autor",a)}),e.prototype.__defineGetter__("missatge",function(){return this.get("missatge")}),e.prototype.__defineSetter__("missatge",function(a){return this.set("missatge",a)}),e.prototype.__defineGetter__("grup",function(){return this.get("grup")}),e.prototype.__defineSetter__("grup",function(a){return this.set("grup",a)}),e.prototype.__defineGetter__("titol",function(){return this.get("titol")}),e.prototype.__defineSetter__("titol",function(a){return this.set("titol",a)});var f={};return f.getNotesForGroup=function(a){var c=new Parse.Query(e),d=b.defer(),f=Parse.Object.extend("Grup"),g=new f;return g.id=a,c.equalTo("grup",g),c.include("autor"),console.log("In hiar"),c.find({success:function(a){console.log(a.length),d.resolve(a)},error:function(a){console.log("theres been an error: ",a),d.reject(a)}}),d.promise},f.createNote=function(c,d,f){var g=new e;g.set("titol",c),g.set("missatge",d);var h=Parse.Object.extend("Grup"),i=new h;i.id=f,g.set("grup",i),g.set("autor",a.currentUser);var j=b.defer();return g.save(null,{success:function(a){console.log("Saved"),j.resolve(a)},error:function(a,b){console.log("There's been an error saving note: ",b),j.reject(b)}}),j.promise},f.getMyNotes=function(){var c=b.defer();return d.getGroups().then(function(b){var d=new Parse.Query(e);d.containedIn("grup",b),d.include("autor"),d.include("grup"),d.notEqualTo("autor",a.currentUser),d.limit(10),d.ascending("createdAt"),d.find({success:function(a){c.resolve(a)},error:function(a){c.reject(a)}})},function(a){console.log("Error hiar: ",a)}),c.promise},f}]),angular.module("stugrApp").factory("TaskModel",["$rootScope","$q","USER_ROLES","GroupModel",function(a,b,c,d){var e=Parse.Object.extend("Tasca");e.prototype.__defineGetter__("professor",function(){return this.get("professor")}),e.prototype.__defineSetter__("professor",function(a){return this.set("professor",a)}),e.prototype.__defineGetter__("nom",function(){return this.get("nom")}),e.prototype.__defineSetter__("nom",function(a){return this.set("nom",a)}),e.prototype.__defineGetter__("entrega",function(){return this.get("entrega")}),e.prototype.__defineSetter__("entrega",function(a){return this.set("entrega",a)}),e.prototype.__defineGetter__("grup",function(){return this.get("grup")}),e.prototype.__defineSetter__("grup",function(a){return this.set("grup",a)});var f={};return f.getTasksForGroup=function(a){var c=new Parse.Query(e),d=b.defer(),f=Parse.Object.extend("Grup"),g=new f;g.id=a,c.equalTo("grup",g);var h=new Date;return h.setHours(0),c.greaterThanOrEqualTo("entrega",h),c.find({success:function(a){console.log(a.length),d.resolve(a)},error:function(a){console.log("theres been an error: ",a),d.reject(a)}}),d.promise},f.createTask=function(c,d,f){var g=new e;g.set("nom",c),g.set("entrega",d);var h=Parse.Object.extend("Grup"),i=new h;i.id=f,g.set("grup",i),g.set("professor",a.currentUser);var j=b.defer();return g.save(null,{success:function(a){console.log("Saved"),j.resolve(a)},error:function(a,b){console.log("There's been an error saving task: ",b),j.reject(b)}}),j.promise},f.getMyTasks=function(){var a=b.defer();return d.getGroups().then(function(b){var c=new Parse.Query(e);c.containedIn("grup",b);var d=new Date;d.setHours(0,0,0,0);var f=new Date(d);f.setDate(f.getDate()+1),c.greaterThanOrEqualTo("entrega",d),c.lessThan("entrega",f),c.include("professor"),c.include("grup"),c.limit(5),c.ascending("createdAt"),c.find({success:function(b){a.resolve(b)},error:function(b){a.reject(b)}})},function(a){console.log("Error hiar: ",a)}),a.promise},f}]),angular.module("stugrApp").run(["$templateCache",function(a){a.put("views/admin.html",'<div ng-controller="AdminCtrl as admin"> <h2>Eines d\'administrador</h2> <div class="row"> <div class="col-md-8"> <h3>Crea un usuari</h3> <form action="" method=""> <input name="user" type="text" placeholder="username" ng-model="newUser.username"> <input type="email" placeholder="email" ng-model="newUser.email"> <input type="text" placeholder="First Name" ng-model="newUser.first_name"> <input type="text" placeholder="Last Name" ng-model="newUser.last_name"> <select ng-model="newUser.role"> <option value="1">Alumne</option> <option value="2">Professor</option> <option value="3">Coordinador</option> </select> <button class="btn btn-info btn-block register" type="submit" ng-click="doCreate()">Register</button> </form> </div> <div class="col-md-4"> <p ng-show="statusShow"> {{ statusText }} </p> <div> </div> </div></div></div>'),a.put("views/group.html",'<h2>Els teus cursos</h2> <div class="row"> <div class="col-md-8"> <input ng-model="searchData" id="searchGroupsBox" placeholder="Cerca" name="search"> <div ng-if="noGroups"> No tens grups, crea\'n un amb el formulari de la dreta. </div> <ul class="groupsList"> <li ng-repeat="group in myGroups | filter: searchData"> <span><a ui-sref="courseDetail({id: group.id})">{{group.nom}}</a></span> </li> </ul> </div> <div class="form-box col-md-4" ng-if="isAuthorized([userRoles.coord, userRoles.professor])"> <uib-accordion> <uib-accordion-group heading="Crea un grup" is-open="newGrupAccordionIsOpen"> <h5 style="text-align: center">Nom del grup:</h5><input placeholder="Nom" name="name" ng-model="newGroupData.nom" type="text"><br> <div class="timePickerControllerSet"> <h5 style="text-align: center">Horari del grup:</h5> <uib-timepicker ng-model="hourPicker.time" ng-change="timeChange()" hour-step="1" minute-step="10" show-meridian="false"></uib-timepicker> <select name="Dia" ng-model="hourPicker.weekday" ng-options="option.string for option in weekdays track by option.index"></select> <button class="btn btn-success" ng-click="addToTimetable()"><span class="glyphicon glyphicon-plus-sign"></button> </div> <ul class="timetableList"> <li ng-repeat="hour in newGroupData.horaris track by hour.weekday.index| orderBy: weekday.index"> {{hour.weekday.string}}, a les {{hour.time | date:"HH:mm"}} <button class="btn btn-danger" ng-click="deleteHour($index)"><span class="glyphicon glyphicon-remove"></button> </li> </ul> <button class="btn btn-info btn-block register" type="submit" ng-click="createGroup()">Crea\'l</button> </uib-accordion-group> </uib-accordion> </div> </div>'),a.put("views/groupdetail.html",'<h1 style="text-align: center">{{groupData.nom}}</h1> <h4 style="text-align: center"> {{groupData.Professor.first_name}} {{groupData.Professor.last_name}} </h4> <div class="timetabledisplay"> <ul> <li ng-repeat="class in groupData.horari track by class.weekday.index| orderBy:weekday.index"> {{class.weekday.string}} a les {{class.time | date:"HH:mm"}} </li> </ul> </div> <div class="row"> <div class="col-md-6"> <uib-accordion> <uib-accordion-group heading="Envia una nota" is-open="true"> <div class="row"> <div class="col-md-6"> <h4>Títol:</h4> <input placeholder="Opcional" name="titol" ng-model="newNote.titol" type="text"> </div> <div class="col-md-6"> <h4>Missatge:</h4> <textarea placeholder="Obligatori" ng-model="newNote.missatge"></textarea> <p> <button class="btn btn-info register" type="submit" ng-click="postNote()">Envia</button> </p> </div> </div> </uib-accordion-group> </uib-accordion> </div> <div class="col-md-6" ng-if="isAuthorized([userRoles.coord, userRoles.professor])"> <uib-accordion> <uib-accordion-group heading="Crea una tasca" is-open="true"> <div class="row"> <div class="col-md-6"> <h4>Nom:</h4> <input placeholder="Obligatori" name="titol" ng-model="newTask.nom" type="text" ng-required="true"> </div> <div class="col-md-6"> <h4>Data Entrega/Límit:</h4> <p class="input-group"> <input type="text" class="form-control" uib-datepicker-popup="shortDate" ng-model="newTask.entrega" is-open="popup1.opened" min-date="minDate" datepicker-options="dateOptions" date-disabled="disabled(date, mode)" ng-required="true" close-text="Tancar" clear-text="Borra" today-text="Avui"> <span class="input-group-btn"> <button type="button" class="btn btn-default" ng-click="openCalendar()"><i class="glyphicon glyphicon-calendar"></i></button> </span> </p> <button class="btn btn-info register" type="submit" ng-click="createTask()">Envia</button> </div> </div> </uib-accordion-group> </uib-accordion> </div> </div> <div class="row"> <div class="col-md-6"> <h3>Notes del grup</h3> <span ng-show="groupNotes.length == 0">No hi ha notes publicades</span> <div ng-repeat="note in groupNotes | orderBy:createdAt:true | limitTo: 5" class="noteDiv"> <div class="header"> <span ng-show="note.titol" style="font-size: 13pt"><b>{{note.titol}}</b>&nbsp;&nbsp;|&nbsp;&nbsp;</span><span class="author"><span class="glyphicon glyphicon-user"> <b>{{note.autor.full_name}}</b></span> <span class="date">{{note.createdAt | date:"dd MMMM \'de\' yyyy \'a les\' HH:mm"}}</span>&nbsp;&nbsp;<span ng-click="deleteNote($index)" ng-if="isAuthorized([userRoles.coord, userRoles.professor])" class="deleteButton glyphicon glyphicon-trash"> </div> <div class="missatge">{{note.missatge}}</div> </div> </div> <div class="col-md-6"> <h3>Tasques del grup</h3> <span ng-show="groupTasks.length == 0">No hi ha tasques programades</span> <ul class="taskList"> <li ng-repeat="task in groupTasks | orderBy: entrega : false"> <span class="entrega">{{task.entrega | date:"EEEE, dd MMMM \'de\' yyyy"}}</span>: <span class="tasca">{{task.nom}}&nbsp;&nbsp;</span><span ng-click="deleteTask($index)" ng-if="isAuthorized([userRoles.coord, userRoles.professor])" class="deleteButton glyphicon glyphicon-trash"> </li> </ul> </div> </div> <div class="row" style="margin-top: 20px" ng-if="isAuthorized([userRoles.coord, userRoles.professor])"> <div class="col-md-6"> <uib-accordion> <uib-accordion-group heading="Llistat d\'alumnes" is-open="true"> <input ng-model="studentSearchData" id="searchStudentsBox" placeholder="Cerca" name="search"> <ul class="studentsList"> <li ng-repeat="student in studentsList | filter: studentSearchData"> <span><a ui-sref="otherProfile({id: student.id})">{{student.full_name}}</a></span>&nbsp;&nbsp;<span style="font-size: 11pt" ng-click="deleteStudent(student.id, $index)" class="deleteButton glyphicon glyphicon-remove"> </li> </ul> </uib-accordion-group> </uib-accordion> </div> <div class="col-md-6"> <uib-accordion> <uib-accordion-group heading="Afegeix un alumne" is-open="true"> <h4 style="text-align: center">Nom de l\'alumne:</h4> <input type="text" ng-model="userToBeAdded" placeholder="Comença a escriure" uib-typeahead="results as results.full_name for results in getAllStudents($viewValue)" typeahead-show-hint="true" typeahead-loading="loadingStudents" typeahead-no-results="noResults" class="form-control"> <p> <span ng-show="loadingStudents">Carregant...</span><span ng-show="noResults">No hi ha resultats</span> {{userToBeAdded.id}} </p> <p><button class="btn btn-info" type="submit" ng-click="addStudent({{userToBeAdded}})">Afegeix</button></p> </uib-accordion-group> </uib-accordion> </div> </div> <uib-accordion> <uib-accordion-group heading="Configuració del grup" panel-class="panel-danger" is-open="true"> <div class="row"> <div class="col-md-4"> <h5>Canvia el nom</h5> <input type="text" ng-model="groupData.nom" placeholder="Escriu un nom"> <button class="btn btn-warning" ng-click="changeName()">Canvia</button> </div> <div class="col-md-4"> <h5>Canvia els horaris</h5> </div> <div class="col-md-4"> <h5>Elimina el grup</h5> <p> Si elimines el grup també s\'eliminaran totes les notes i tasques associades. Aquesta acció és irrevocable.</p> <button class="btn btn-danger" ng-click="deleteGroup()">Elimina</button> </div> </div> </uib-accordion-group> </uib-accordion>'),a.put("views/logIn.html",'<div class="container"> <div class="login-container"> <h1>Student Groups</h1> <h4>Inici de Sessió</h4> <div id="output"></div> <div class="form-box"> <form action="" method=""> Nom d\'Usuari: <input name="user" type="text" ng-model="userCredentials.username"><br> Contrassenya: <input type="password" ng-model="userCredentials.password"> <button class="btn btn-info btn-block login" type="submit" ng-click="doLogin()">Entra</button> </form> </div> </div> </div>'),a.put("views/main.html",'<div ng-controller="MainCtrl as main"> <div class="row"> <div class="col-md-6" style="text-align: center"> <h2>Tasques d\'avui</h2> <span ng-show="todayTasks.length == 0">No hi ha tasques programades</span> <ul class="taskList"> <li ng-repeat="task in todayTasks"> <span class="entrega"><span ng-show="isAuthorized([userRoles.alumne])">{{task.professor.full_name}} | </span>{{task.grup.nom}}</span>: <span class="tasca">{{task.nom}}</span> </li> </ul> </div> <div class="col-md-6" style="text-align: center"> <h2>Classes d\'avui</h2> <span ng-show="todayClasses.length == 0">Avui no tens classes</span> <ul class="horarisList"> <li ng-repeat="class in todayClasses | orderBy: hora.time : true"> {{class.group.nom}} a les {{class.hora.time | date:"HH:mm"}} </li> </ul> </div> </div> <div class="row" style="margin-top: 30px"> <div class="col-md-6" style="text-align: center"> <h2>Notes Recents</h2> <span ng-show="recentNotes.length == 0">No hi ha notes publicades</span> <div ng-repeat="note in recentNotes | orderBy:createdAt:true | limitTo: 3" class="noteDiv"> <div class="header"> <span ng-show="note.titol" style="font-size: 13pt"><b>{{note.titol}}</b>&nbsp;&nbsp;|&nbsp;&nbsp;</span><span class="author"><span class="glyphicon glyphicon-user"> <b>{{note.autor.full_name}}</b></span> <span class="date">{{note.createdAt | date:"dd MMMM \'de\' yyyy \'a les\' HH:mm"}}</span>&nbsp;|&nbsp; <span>{{note.grup.nom}}</span> </div> <div class="missatge">{{note.missatge}}</div> </div> </div> <div class="col-md-6 disabled" style="text-align: center"> <h2>Missatgeria</h2> Característica disponible pròximament. </div> </div> </div>')}]);